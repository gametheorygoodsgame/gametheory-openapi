openapi: 3.0.3
info:
  title: GameTheory
  description: This is a sample description about this spec.
  termsOfService: ''
  contact:
    email: jens.eikermann.2022@leibniz-fh.de
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.0.25
externalDocs:
  description: Find out more about spec
  url: ''
servers:
  - url: http://localhost:30167
    description: ''
tags:
  - name: Game
    description: The Game or GameState Object.
  - name: Game -> Player
    description: The Player or PlayerState
    externalDocs:
      description: ''
      url: ''
  - name: Game -> Player -> Move
    description: The Moves.
    externalDocs:
      description: ''
      url: ''
  - name: Game -> Move
    description: ''
    externalDocs:
      description: ''
      url: ''
  - name: Player
    description: ''
    externalDocs:
      description: ''
      url: ''
  - name: Person
    description: ''
    externalDocs:
      description: ''
      url: ''
paths:
  /games/{gameId}:
    get:
      summary: Get a game by Id.
      description: ''
      operationId: getGameById
      tags:
        - Game
      parameters:
        - in: path
          name: gameId
          description: ''
          schema:
            type: string
            minLength: 36
            maxLength: 36
            pattern: >-
              ^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$
            format: uuid
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/game'
    delete:
      summary: Delete a game.
      description: ''
      operationId: deleteGameById
      tags:
        - Game
      parameters:
        - in: path
          name: gameId
          description: ''
          schema:
            type: string
            minLength: 36
            maxLength: 36
            pattern: >-
              ^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$
            format: uuid
          required: true
      responses:
        '204':
          description: Deleted.
    patch:
      summary: Change a Game.
      description: ''
      operationId: updateGameById
      tags:
        - Game
      parameters:
        - in: path
          name: gameId
          description: ''
          schema:
            type: string
            minLength: 36
            maxLength: 36
            pattern: >-
              ^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$
            format: uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                Game:
                  $ref: '#/components/schemas/game'
              required:
                - Game
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/game'
          description: OK
  /games:
    get:
      summary: Returns a list of all Games.
      description: ''
      operationId: getAllGames
      tags:
        - Game
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/game'
                description: List of all Games.
          description: OK
    post:
      summary: Creates a new Game.
      description: ''
      operationId: createGame
      tags:
        - Game
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/game'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/game'
          description: OK
  /games/{gameId}/players:
    get:
      summary: Returns a List of all Players in this game
      description: ''
      operationId: getPlayersByGameId
      tags:
        - Game -> Player
      parameters:
        - in: path
          name: gameId
          description: ''
          schema:
            type: string
            minLength: 36
            maxLength: 36
            pattern: >-
              ^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$
            format: uuid
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/player'
          description: OK
    post:
      summary: Add a new Player to the Game.
      description: ''
      operationId: addPlayerToGameById
      tags:
        - Game -> Player
      parameters:
        - in: path
          name: gameId
          description: ''
          schema:
            type: string
            minLength: 36
            maxLength: 36
            pattern: >-
              ^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$
            format: uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/player'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/player'
          description: Created.
  /games/{gameId}/moves:
    get:
      summary: Returns the moves played in this Game.
      description: ''
      operationId: getMovesByGameId
      tags:
        - Game -> Move
      parameters:
        - in: path
          name: gameId
          description: ''
          schema:
            type: string
            minLength: 36
            maxLength: 36
            pattern: >-
              ^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$
            format: uuid
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/move'
          description: OK
  /games/{gameId}/moves/turns/{turnNumber}:
    get:
      summary: Returns all moves of a Turn.
      description: ''
      operationId: getTurnsOfTurnNumberByGameId
      tags:
        - Game -> Move
      parameters:
        - in: path
          name: gameId
          description: ''
          schema:
            type: string
            minLength: 36
            maxLength: 36
            pattern: >-
              ^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$
            format: uuid
          required: true
        - in: path
          name: turnNumber
          description: ''
          schema:
            type: integer
            minimum: 0
            default: 0
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/move'
          description: OK
  /games/{gameId}/players/{playerId}/moves/:
    get:
      summary: Returns all Moves of a Player.
      description: ''
      operationId: getTurnsOfPlayerIdInGameId
      tags:
        - Game -> Player -> Move
      parameters:
        - in: path
          name: gameId
          description: ''
          schema:
            type: string
            minLength: 36
            maxLength: 36
            pattern: >-
              ^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$
            format: uuid
          required: true
        - in: path
          name: playerId
          description: ''
          schema: &ref_0
            type: string
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/move'
                description: Moves
          description: OK
    post:
      summary: Creates a Move for the Player in the Game
      description: ''
      operationId: createMoveForPlayerInGame
      tags:
        - Game -> Player -> Move
      parameters:
        - in: path
          name: gameId
          description: ''
          schema:
            type: string
            minLength: 36
            maxLength: 36
            pattern: >-
              ^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$
            format: uuid
          required: true
        - in: path
          name: playerId
          description: ''
          schema:
            type: string
            minLength: 36
            maxLength: 36
            pattern: >-
              ^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$
            format: uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/move'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/move'
          description: Created.
  /games/{gameId}/players/{playerId}/moves/turns/{numTurn}:
    get:
      summary: Returns the Move a Player made in a Turn
      description: ''
      operationId: getMoveInTurnNumberOfPlayerIdInGameId
      tags:
        - Game -> Player -> Move
      parameters:
        - in: path
          name: gameId
          description: ''
          schema: *ref_0
          required: true
        - in: path
          name: playerId
          description: ''
          schema: *ref_0
          required: true
        - in: path
          name: numTurn
          description: ''
          schema:
            type: integer
            exclusiveMinimum: false
            minimum: 0
            default: 0
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/move'
          description: OK
    post:
      summary: Creates a Move for a Player in the given Turn.
      description: ''
      operationId: createMoveInTurnNumberForPlayerIdInGameId
      tags:
        - Game -> Player -> Move
      parameters:
        - in: path
          name: gameId
          description: ''
          schema:
            type: string
            minLength: 36
            maxLength: 36
            pattern: >-
              ^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$
            format: uuid
          required: true
        - in: path
          name: playerId
          description: ''
          schema:
            type: string
            minLength: 36
            maxLength: 36
            pattern: >-
              ^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$
            format: uuid
          required: true
        - in: path
          name: numTurn
          description: ''
          schema:
            type: integer
            exclusiveMinimum: false
            minimum: 0
            default: 0
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/move'
          description: OK
components:
  schemas:
    game:
      type: object
      properties:
        id:
          type: string
          minLength: 36
          maxLength: 36
          pattern: >-
            ^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$
          format: uuid
        name:
          type: string
          description: Name of the game for the game master to identify.
        numTurns:
          type: integer
          description: Number of turns.
          default: 5
          minimum: 1
        currentTurn:
          type: integer
          description: Current Turn.
          minimum: 0
          default: 0
        players:
          type: array
          items:
            $ref: '#/components/schemas/player'
          description: List of Players
        cardHandValue:
          type: array
          items:
            type: integer
          description: Value of a Red Card on the players Hand.
        cardPotValue:
          type: array
          items:
            type: integer
          description: >-
            Value of a Red Card in the Public Goods' Pot. Determined by the Game
            Owner.
        potCards:
          type: array
          items:
            type: integer
          description: Number of Red Cards in the Public Goods' Pot.
        isFinished:
          type: boolean
          default: false
          description: Check if game is finished.
      description: Game
      required:
        - id
        - numTurns
        - currentTurn
        - players
        - cardHandValue
        - cardPotValue
        - potCards
    player:
      type: object
      properties:
        id:
          type: string
          minLength: 36
          maxLength: 36
          pattern: >-
            ^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$
          format: uuid
        name:
          type: string
          minLength: 2
          maxLength: 1024
          pattern: \b([A-ZÀ-ÿ][-a-z. ']+[ ]*)+
        moves:
          type: array
          items:
            $ref: '#/components/schemas/move'
        score:
          type: integer
      description: PlayerState
      required:
        - id
        - name
        - moves
        - score
    move:
      type: object
      properties:
        numTurn:
          type: integer
          minimum: 0
          default: 0
        numRedCards:
          type: integer
          default: 0
          minimum: 0
          maximum: 2
          enum:
            - 0
            - 1
            - 2
      required:
        - numTurn
        - numRedCards
  securitySchemes: {}
